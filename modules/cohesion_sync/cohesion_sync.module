<?php

/**
 * @file
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\cohesion\Entity\CohesionSettingsInterface;
use Drupal\Core\Url;
use Symfony\Component\Yaml\Yaml;

define('COHESION_SYNC_DEFAULT_DIR', COHESION_FILESYSTEM_URI . 'sync');
define('COHESION_SYNC_DEFAULT_MODULE_PACKAGES', '/config/site_studio/site_studio.packages.yml');

/**
 * Implements hook_entity_operation_alter().
 */
function cohesion_sync_entity_operation_alter(array &$operations, EntityInterface $entity) {
  if ($entity instanceof CohesionSettingsInterface) {
    // Add "Export package to YML file." and "Lock entity" option to the actions
    // dropdown on all Site Studio entity list builders.
    if (Drupal::currentUser()->hasPermission('access cohesion sync') && $entity->get('status')) {
      // Is entity exportable & isn't something like a custom component.
      if ($entity->getEntityTypeId() && $entity->uuid()) {
        $url = Url::fromRoute('cohesion_sync.operation_export_single', [
          'entity_type' => $entity->getEntityTypeId(),
          'entity_uuid' => $entity->uuid(),
        ]);

        $url->setOption('query', [
          'destination' => \Drupal::request()->getRequestUri(),
        ]);

        $operations['export_package_to_file'] = [
          'title' => t('Export package to .tar.gz file'),
          'url' => Url::fromRoute('cohesion_sync.export.export_single_entity_package', [
            'entity_type' => $entity->getEntityTypeId(),
            'entity_uuid' => $entity->uuid(),
          ]),
          'weight' => 49,
        ];

        $operations['legacy_export_package_to_file'] = [
          'title' => t('Export package to YML file'),
          'url' => $url,
          'weight' => 50,
        ];

        $operations['toggle_lock_for_sync'] = [
          'title' => !$entity->isLocked() ? t('Lock entity') : t('Unlock entity'),
          'url' => Url::fromRoute('cohesion_sync.entity_lock_toggle', [
            'entity_type' => $entity->getEntityTypeId(),
            'entity_uuid' => $entity->uuid(),
          ]),
          'weight' => 60,
        ];
      }
    }
  }
}

/**
 * Implements hook_modules_installed().
 */
function cohesion_sync_modules_installed($modules) {
  // Do not attempt importing package if Site Studio settings are not
  // initialised.
  if (\Drupal::getContainer()->has('cohesion.utils') && \Drupal::service('cohesion.utils')->usedx8Status() === FALSE) {
    return;
  }
  foreach ($modules as $module) {
    $module_path = drupal_get_path('module', $module);
    // Check to see if the config/dx8/packages.yml file exists.
    $packages_yaml_file = $module_path . "/config/dx8/packages.yml";

    // Handle legacy package format.
    if (file_exists($packages_yaml_file)) {
      // Decode the file.
      $config = Yaml::parse(file_get_contents($packages_yaml_file));

      if (is_array($config)) {
        // Loop through the packages and deploy them.
        foreach ($config as $path) {
          // If it's a local path, patch in the path to the module.
          if (file_exists($module_path . '/' . $path)) {
            $path = $module_path . '/' . $path;
          }

          // Attempt to deploy the package.
          try {
            $operations = \Drupal::service('cohesion_sync.drush_helpers')->import(TRUE, FALSE, $path);

            $batch = [
              'title' => t('Importing configuration.'),
              'operations' => $operations,
              'progressive' => FALSE,
            ];

            batch_set($batch);

          }
          catch (\Exception $e) {
            // Tell dblog what happened.
            \Drupal::logger('cohesion')->error($e->getMessage());
          }
        }
      }
    }

    // Handle new package format.
    $package_list_path = $module_path . COHESION_SYNC_DEFAULT_MODULE_PACKAGES;
    if (file_exists($package_list_path)) {
      /** @var \Drupal\cohesion_sync\Services\PackageImportHandler $packageImportHandler */
      $packageImportHandler = \Drupal::service('cohesion_sync.package_import_handler');
      $packageImportHandler->importPackagesFromPath($package_list_path);
    }
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function cohesion_sync_page_attachments_alter(array &$attachments) {
  // Only attach for the sync import route.
  $route = \Drupal::routeMatch()->getRouteName();
  if ($route === 'cohesion_sync.import') {
    // Attach sync file chunk that can be used in module file-js.
    $attachments['#attached']['drupalSettings']['cohesion']['urls']['sync_file_chunk'] = Url::fromRoute('cohesion_sync.chunked')
      ->toString();
  }

  // Only attach for sync react app package add & edit forms.
  $sync_react_routes = [
    'entity.cohesion_sync_package.add_form',
    'entity.cohesion_sync_package.edit_form',
  ];
  if (in_array($route, $sync_react_routes)) {
    $attachments['#attached']['drupalSettings']['cohesion']['urls']['sync_refresh'] = Url::fromRoute('cohesion_sync.refresh')->toString();
  }
}
